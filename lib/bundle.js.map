{"version":3,"sources":["webpack:///webpack/bootstrap 3753d2ddd85053f62230","webpack:///./lib/entry.js","webpack:///./lib/player.js","webpack:///./lib/game.js","webpack:///./lib/game_handler.js","webpack:///./lib/square.js","webpack:///./lib/fall_block.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;AACA;;AAEA;AACA;;AAEA;;AAEA,2EAAyB;AACzB;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;ACrBD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACrGA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gFAA8B;AAC9B;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA,sFAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACzIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;AC3BA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO;AACP;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3753d2ddd85053f62230","import GameHandler from './game_handler';\nimport Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n\n  const ctx = canvas.getContext(\"2d\");\n\n    let game = new Game({ canvasWidth: canvas.width,\n      canvasHeight: canvas.height,\n      ctx: ctx });\n\n    // game.createPlayer();\n    game.setUpGame();\n    game.startGameLoop();\n\n    // let gameHandler = new GameHandler(canvas, ctx, game);\n    // gameHandler.startGameLoop();\n    //not sure why I need a game handler why am I making this complicated\n\n  console.log(\"canvas working\");\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entry.js\n// module id = 0\n// module chunks = 0","import Square from './square';\n\nconst RIGHT_CURSOR = 39;\nconst LEFT_CURSOR = 37;\nconst A = 65;\nconst S = 83;\nconst D = 68;\nconst F = 70;\n\n//sets the y position for the dog sprite on the canvas\nconst DOGY_OFFSET = 70;\n\nconst DOG_SPRITE_SX_INCREMENT = 192;\nconst MAX_DOG_SPRITE_WIDTH = 576;\n\n//makes sure this number of frames has passed before the dogs sprite is updated\nconst SWITCH_TICK = 600;\n\n\nclass Player extends Square{\n  constructor(options) {\n    super(options);\n\n    this.keyDownHandler = this.keyDownHandler.bind(this);\n    this.draw = this.draw.bind(this);\n\n    //may want to rename or change this but this is for dog sprite sheets\n    //if rename, rename it more general\n    this.dogSpriteX = 0;\n\n    //keeps the dog from bugging out when animating\n    this.tickBuffer = 0;\n\n\n    document.addEventListener(\"keydown\", this.keyDownHandler, false);\n  }\n\n  draw(ctx) {\n    if(this.color === \"red\") {\n      this.drawDog(ctx);\n    } else {\n      super.draw(ctx);\n    }\n  }\n\n\n  //just checking but this works, now need to find out how to do sprites\n  drawDog(ctx) {\n    let image = new Image();\n    image.src = \"assets/images/Dog-sprite-midres.png\";\n    ctx.drawImage(image,this.dogSpriteX,0,200,200,this.xPos,this.yPos - DOGY_OFFSET,this.width,this.width);\n\n    setInterval( () => {\n      this.tickBuffer++;\n\n      if(this.tickBuffer >= SWITCH_TICK ) {\n\n        if(this.dogSpriteX === MAX_DOG_SPRITE_WIDTH) {\n          this.dogSpriteX = 0;\n        } else {\n          this.dogSpriteX += DOG_SPRITE_SX_INCREMENT;\n        }\n\n        this.tickBuffer = 0;\n      }\n    }, 500 );\n    // requestAnimationFrame(this.drawDog);\n  }\n\n\n//change it so that player can loop around\n  keyDownHandler(e) {\n    if (e.keyCode === RIGHT_CURSOR &&\n      ((this.xPos + this.width) >= this.canvasWidth)) {\n      this.xPos = 0;\n    } else if(e.keyCode === RIGHT_CURSOR &&\n      ((this.xPos + this.width) < this.canvasWidth)) {\n      this.xPos += this.width;\n    }\n\n    else if (e.keyCode === LEFT_CURSOR && (this.xPos <= 0)) {\n      this.xPos = this.canvasWidth - this.width;\n    }\n\n    else if (e.keyCode === LEFT_CURSOR && (this.xPos > 0)) {\n      this.xPos -= this.width;\n    }\n\n     else if (e.keyCode === A) {\n      this.color = \"red\";\n    } else if (e.keyCode === S) {\n      this.color = \"green\";\n    } else if (e.keyCode === D) {\n      this.color = \"yellow\";\n    } else if (e.keyCode === F) {\n      this.color = \"blue\";\n    }\n  }\n\n}\n\nexport default Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 1\n// module chunks = 0","//may want to add parent class to this because it will share a lot of the same\n//features as the falling blocks\n\nconst COLORS = [\"red\", \"green\", \"blue\", \"yellow\"];\nconst XPOS_MULTIPLIER = [0, 1, 2, 3, 4];\nconst PLAYER_HEIGHT = 10;\n\nimport Player from './player';\nimport FallBlock from './fall_block';\nclass Game {\n\n  constructor(options) {\n    this.canvasWidth = options.canvasWidth;\n    this.canvasHeight = options.canvasHeight;\n    this.ctx = options.ctx;\n    this.width = this.canvasWidth / 5;\n    this.height = this.canvasWidth / 5;\n\n    //this increments as score goes up\n    this.fallSpeed = 4;\n\n    //doing score first then do lives\n    this.score = 0;\n    this.lives = 3;\n\n    this.startGameLoop = this.startGameLoop.bind(this);\n    this.setUpGame = this.setUpGame.bind(this);\n\n    //TESTING THIS\n    // this.drawDog = this.drawDog.bind(this);\n  }\n\n  getRandomColor() {\n    return COLORS[Math.floor(Math.random() * COLORS.length)];\n  }\n\n  getRandomXPos() {\n    return this.width * XPOS_MULTIPLIER[Math.floor(Math.random() * XPOS_MULTIPLIER.length)];\n  }\n\n  createPlayer() {\n    //want to get player to start at the very center of the canvas\n    this.player = new Player({ xPos: Math.floor((this.canvasWidth / 2) / 100) * 100,\n      yPos: this.canvasHeight - PLAYER_HEIGHT,\n      color: this.getRandomColor(),\n      width: this.width,\n      height: PLAYER_HEIGHT,\n      canvasWidth: this.canvasWidth});\n  }\n\n  createFallBlock(yPos) {\n    let fallBlock = new FallBlock({ xPos: this.getRandomXPos(),\n      yPos: yPos,\n      color: this.getRandomColor(),\n      width: this.width,\n      height: this.height,\n      canvasWidth: this.canvasWidth,\n      canvasHeight: this.canvasHeight,\n      fallSpeed: this.fallSpeed,\n    });\n\n    return fallBlock;\n  }\n\n//have access to fallBlock's yPos + this.height (aka bottom of the square)\n//also need access to range of player's x which you can get from this.player yes\n  checkCatchBlock(fallBlock) {\n    if(fallBlock.yPos + this.height === this.canvasHeight &&\n    !fallBlock.firstTouchGround &&\n    fallBlock.xPos === this.player.xPos &&\n    fallBlock.color === this.player.color) {\n\n      this.score += 10;\n      fallBlock.firstTouchGround = true;\n    } else if (fallBlock.yPos + this.height === this.canvasHeight &&\n    !fallBlock.firstTouchGround) {\n      this.lives--;\n      fallBlock.firstTouchGround = true;\n    }\n  }\n\n  drawScore() {\n    this.ctx.font = \"16px Arial\";\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillText(\"Score: \" + this.score, 8, 20);\n  }\n\n  drawLives() {\n    this.ctx.font = \"16px Arial\";\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillText(\"Lives: \" + this.lives, 100, 20);\n  }\n\n\n\n\n  setUpGame() {\n    this.createPlayer();\n    this.fallBlock1 = this.createFallBlock(0);\n    this.fallBlock2 = this.createFallBlock(-(this.height * 2));\n    this.fallBlock3 = this.createFallBlock(-(this.height * 4));\n  }\n\n  checkGameOver() {\n    if(this.lives === 0) {\n      cancelAnimationFrame(this.startGameLoop);\n    } else {\n      requestAnimationFrame(this.startGameLoop);\n    }\n  }\n\n  startGameLoop() {\n    this.ctx.clearRect(0,0, this.canvasWidth, this.canvasHeight);\n    this.player.draw(this.ctx);\n\n    //COMMENT THIS BACK IN ONCE YOU FINISH SPRITES\n    // this.fallBlock1.draw(this.ctx);\n    // this.fallBlock2.draw(this.ctx);\n    // this.fallBlock3.draw(this.ctx);\n    //\n    //\n    // this.checkCatchBlock(this.fallBlock1);\n    // this.checkCatchBlock(this.fallBlock2);\n    // this.checkCatchBlock(this.fallBlock3);\n    //END OF CODE YOU NEED DO NOT DELETE\n\n\n    this.drawScore();\n    this.drawLives();\n\n\n    this.checkGameOver();\n    // requestAnimationFrame(this.startGameLoop);\n  }\n\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 2\n// module chunks = 0","//handles all the stuff it takes to get the game running\n\nclass GameHandler {\n  constructor(canvas, ctx, game) {\n    this.game = game;\n    this.canvas = canvas;\n    this.ctx = ctx;\n  }\n\n  startGameLoop() {\n    // this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height);\n    // this.player.draw();\n\n  }\n\n\n}\n\nexport default GameHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_handler.js\n// module id = 3\n// module chunks = 0","//parent class of all the square elements (player and falling squares)\n\nclass Square {\n constructor(options) {\n   this.xPos = options.xPos;\n   this.yPos = options.yPos;\n   this.color = options.color;\n   this.width = options.width;\n   this.height = options.height;\n   this.canvasWidth = options.canvasWidth;\n   this.canvasHeight = options.canvasHeight;\n }\n\n\n   draw(ctx) {\n     ctx.beginPath();\n     ctx.rect(this.xPos, this.yPos, this.width, this.height);\n     ctx.fillStyle = this.color;\n     ctx.strokeStyle = \"black\";\n     ctx.lineWidth = 5;\n     ctx.stroke();\n     ctx.fill();\n     ctx.closePath();\n   }\n\n}\n\nexport default Square;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/square.js\n// module id = 4\n// module chunks = 0","const INTERVAL = 20;\nconst COLORS = [\"red\", \"green\", \"blue\", \"yellow\"];\nconst XPOS_MULTIPLIER = [0, 1, 2, 3, 4];\n\nimport Square from './square';\n\nclass FallBlock extends Square {\n  constructor(options) {\n    super(options);\n    this.fallSpeed = options.fallSpeed;\n\n    //if don't have this check, score or lives would increment too many times\n    //because the block stays on the ground for a certain amount of time\n    this.firstTouchGround = false;\n\n    this.fall(this.fallSpeed);\n\n  }\n\n  fall(fallSpeed) {\n    setInterval( () => {\n\n      if(this.yPos + this.height === this.canvasHeight) {\n        this.yPos = -(this.height) * 2;\n        this.xPos = this.width * XPOS_MULTIPLIER[Math.floor(Math.random() * XPOS_MULTIPLIER.length)];\n        this.color = COLORS[Math.floor(Math.random() * COLORS.length)];\n\n      } else {\n        this.yPos += fallSpeed;\n\n        this.firstTouchGround = false;\n\n      }\n    }, INTERVAL);\n  }\n}\n\nexport default FallBlock;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/fall_block.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}